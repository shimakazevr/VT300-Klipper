[respond]
default_type: echo
default_prefix:

[gcode_macro M109] # Wait Hotend Temp
rename_existing: M109.1
gcode:
    #Parameters
    {% set s = params.S|float %}

    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  # Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-2} MAXIMUM={s+5}   # Wait for hotend temp (within n degrees)
    {% endif %}


[gcode_macro M190] # Wait Bed Temp
rename_existing: M190.1
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   # Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s-2} MAXIMUM={s+5}  # Wait for bed temp (within n degrees)
    {% endif %}



[gcode_macro _SET_MPC_MATERIAL]
description: Set heater MPC parameters for a given material
variable_filament_table:
    ## Update this table to adjust material settings
    {
        ## ( density, heat capacity )  # suggested heat capacity range
        "PLA"       : ( 1.25, 2.20 ),  # 1.80 - 2.20
        "PETG"      : ( 1.27, 2.20 ),  # 1.70 - 2.20
        "PC+ABS"    : ( 1.15, 2.20 ),  # 1.50 - 2.20
        "ABS"       : ( 1.06, 2.40 ),  # 1.25 - 2.40
        "ASA"       : ( 1.07, 2.10 ),  # 1.30 - 2.10
        "PA6"       : ( 1.12, 2.50 ),  # 2.00 - 2.50
        "PA"        : ( 1.15, 2.50 ),  # 2.00 - 2.50
        "PC"        : ( 1.20, 1.90 ),  # 1.10 - 1.90
        "TPU"       : ( 1.21, 2.00 ),  # 1.50 - 2.00
        "TPU-90A"   : ( 1.15, 2.00 ),  # 1.50 - 2.00
        "TPU-95A"   : ( 1.22, 2.00 ),  # 1.50 - 2.00
        "ABS-CF"    : ( 1.11, 2.40 ),  # 1.25 - 2.40
        "ASA-CF"    : ( 1.11, 2.10 ),  # 1.30 - 2.10
        "PA6-CF"    : ( 1.19, 2.50 ),  # 2.00 - 2.50
        "PC+ABS-CF" : ( 1.22, 2.20 ),  # 1.50 - 2.20
        "PC+CF"     : ( 1.36, 1.90 ),  # 1.10 - 1.90
        "PLA-CF"    : ( 1.29, 2.20 ),  # 1.80 - 2.20
        "PETG-CF"   : ( 1.30, 2.20 ),  # 1.70 - 2.20
        "PPS-CF"    : ( 1.29, 1.70 ),  # 1.80 - 2.40
    }
gcode:
    {% set material = params.MATERIAL | upper %}
    {% set heater = params.HEATER | default('extruder') %}
    {% set extruder_config = printer.configfile.settings[heater] %}

    {% if material in filament_table %}
        {% set (density, heat_capacity) = filament_table[material] %}

        RESPOND PREFIX=ðŸ”¥ MSG="Configured {heater} MPC for {material}. Density: {density}, Heat Capacity: {heat_capacity}"
    {% else %}
        {% set density = extruder_config.filament_density %}
        {% set heat_capacity=extruder_config.filament_heat_capacity %}

        RESPOND PREFIX=ðŸ”¥ MSG="Unknown material '{material}', using default mpc parameters for {heater}"
    {% endif %}

    MPC_SET HEATER={heater} FILAMENT_DENSITY={density} FILAMENT_HEAT_CAPACITY={heat_capacity}


[gcode_macro FORM_TIP]
description: creates a pointed tip when removing filament
gcode:
      {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(245)|float %}
      M109 S{EXTRUDER_TEMP}                               #start heating nozzle dont wait
      G91
      G0 E15 F360
      G0 E5 F3600
      G0 E-22 F3600 
      G0 E2 F300
      G0 E-2.1 F300
      G0 E2 F300
      G0 E-2.2 F300
      G0 E2 F300
      G0 E-2.3 F300
      G0 E2 F300
      G0 E-2.4 F300
      G0 E2 F300
      G0 E-2.5 F300
      G0 E2 F300
      G0 E-43 F300                                                               
      G0 E-100 F3600


[gcode_macro motor_amps]
description: change motor amperage on the fly
gcode:
 SET_TMC_CURRENT STEPPER=stepper_x CURRENT={params.CURRENT|default(1.8)}
 SET_TMC_CURRENT STEPPER=stepper_y CURRENT={params.CURRENT|default(1.8)}
#  SET_TMC_CURRENT STEPPER=stepper_x1 CURRENT={params.CURRENT|default(1.8)}
#  SET_TMC_CURRENT STEPPER=stepper_y1 CURRENT={params.CURRENT|default(1.8)}

[gcode_macro Z_TILT_ADJUST]
rename_existing: Z_TILT_ADJUST_BASE
gcode:
    Z_TILT_ADJUST_BASE horizontal_move_z=5 retry_tolerance=0.0075
    Z_TILT_ADJUST_BASE horizontal_move_z=2

[gcode_macro nozzleadxlshit]
gcode:
 SET_KINEMATIC_POSITION Z=50
 G28 X Y

[gcode_macro PRINT_START]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(105)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(245)|float %}
    _SET_MPC_MATERIAL MATERIAL={params.MATERIAL}
    SET_PIN PIN=LED_Back VALUE=0.05
    SET_PIN PIN=LED_Main VALUE=0.05
    SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=MCU TARGET=55
    G90
    STATUS_HEATING                                                                # change led's to heating status 
    M190 S{BED_TEMP}                                                              # wait for bed temperature before next step
    # M140 S{bed_temp}                                                              # start heating bed dont wait
    m104 S145                                                                     # start heating nozzle to safe home temp
    G32                                                                           # home all and level z
    STATUS_HEATING                                                                # change led's to heating status 
    G1 X256 Y300 F18000                                                           # quick move to purge and brush area
    SET_VELOCITY_LIMIT ACCEL=20000 SQUARE_CORNER_VELOCITY=10                      # speed accels back up for cleaning
    M109 S145                                                                     # move temperature for safe probing
    CLEAN_NOZZLE                                                                  # clean nozzle with nozzle brush
    G1 X256 Y300 Z10 F18000                                                       # raise from purge# move away from brush before meshing without dropping Z 
    G1 X256 Y280 Z10 F18000                                                       # quick move away from nozzle brush to prevent scraping
    # G28 Z                                                                       # old scan homing
    CARTOGRAPHER_TOUCH_HOME                                                       # touch homing
    M104 S{EXTRUDER_TEMP}                                                         # Start heating to print temp
    BED_MESH_CLEAR                                                                # clear current mesh
    SET_VELOCITY_LIMIT ACCEL=10000 SQUARE_CORNER_VELOCITY=20                      # set accels to prevent hyper agressive meshin 
    STATUS_MESHING                                                                # set led statuses to mesh
    BED_MESH_CALIBRATE adaptive=1                                                 # start bedmesh calibrate
    G4 P500                                                                       # wait required to prevent MCU overload / inconsistant mesh calculation
    G1 X256 Y300 F18000                                                           # quick move to purge and brush area
    SET_VELOCITY_LIMIT ACCEL=20000 SQUARE_CORNER_VELOCITY=10                      # speed accels back up for purge travel
    M109 S{EXTRUDER_TEMP}                                                         # wait for nozzle temperature before next step
    PURGE_NOZZLE EXTRUDER_TEMP={EXTRUDER_TEMP}                                    # Purge + clean nozzle 
    G1 X256 Y280 Z10 F18000                                                       # raise from purge# move away from brush before meshing without dropping Z 
    G1 X144 Y150 Z10 F27000                                                       # quick move away from nozzle brush to middle of print bed
    # M109 S{EXTRUDER_TEMP}                                                       # wait for nozzle temperature before next step
    SET_NOZZLE_LEDS_ON                                                            # enable white led's on toolhead
    STATUS_PRINTING                                                               # set toolhead led status to printing
    {action_respond_info("Happy Printing~")}

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G91                            ; relative positioning
    G1 E-15.0 F3600                ; retract filament
    G92 E0                         ; zero the extruder
    G0 Z1.00 X20.0 Y20.0 F10000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    PARK
    # BED_MESH_CLEAR
    SET_NOZZLE_LEDS_OFF
    STATUS_READY
    SET_VELOCITY_LIMIT ACCEL=20000 SQUARE_CORNER_VELOCITY=20
    SET_PIN PIN=LED_Back VALUE=0
    SET_PIN PIN=LED_Main VALUE=0.01
    SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=MCU TARGET=75.0
    SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=Bedfans TARGET=0
    g10
    {action_respond_info("Print Complete!")}
    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=10
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
    

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    SAVE_GCODE_STATE NAME=STATE_PRINT_CANCEL
    G10
    G92 E0                         ; zero the extruder
    M107                           ; turn off fan
    G91                            ; relative positioning
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    PARK
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SET_VELOCITY_LIMIT ACCEL=20000 SQUARE_CORNER_VELOCITY=20
    RESTORE_GCODE_STATE NAME=STATE_PRINT_CANCEL MOVE=0
    SET_PIN PIN=LED_Back VALUE=0
    SET_PIN PIN=LED_Main VALUE=0.01
    SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=Bedfans TARGET=10
    SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=Exhaust TARGET=60
    SET_NOZZLE_LEDS_OFF
    STATUS_READY
    SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=MCU TARGET=65.0
    SDCARD_RESET_FILE

[gcode_macro G32]
gcode:
    STATUS_LEVELING
    BED_MESH_CLEAR
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}
    # PROBE_SWITCH METHOD=SCAN
    Z_TILT_ADJUST
    G28 Z
    G90
    G0 X144 Y155 Z10 F18000
    STATUS_READY

[gcode_macro M141]
gcode:
    {% set s = params.s|default(0)|float %}
    SET_TEMPERATURE_FAN_TARGET temperature_fan="Exhaust" TARGET={params.S}

[gcode_macro M191]
variable_chambertargettemp: 0
gcode:
    SET_GCODE_VARIABLE MACRO=M191 VARIABLE=chambertargettemp VALUE={params.S}                   ; set target temp for reference outside of the macro (for the loop)
    
    {% if not printer["temperature_fan chamber"].temperature >= S|int %}                 ; ##IF CHAMBER TEMP IS NOT ALREADY REACHED##
        { action_respond_info("Chamber not at temp yet, pausing...") }
            {% if not printer.pause_resume.is_paused %}
                PAUSE                                                                   ; pause if not already paused
            {% endif %}
        UPDATE_DELAYED_GCODE ID=M191-Wait DURATION=5                                   ; start wait loop
    {% else %}
        { action_respond_info("Chamber at or above temp, continuing...") }             ; ##IF CHAMBER TEMP IS ALREADY REACHED##
        UPDATE_DELAYED_GCODE ID=M191-Wait DURATION=0                                   ; break wait loop if it happens to be running already (shouldn't be)
        {% if printer.pause_resume.is_paused %}
            RESUME                                                                       ; resume if paused (shouldn't be)
        {% endif %}
    {% endif %}

#This part will loop until the desired chamber temp is reached, then resume the print
[delayed_gcode M191-Wait]
gcode:
    {% if printer["temperature_fan chamber"].temperature >= printer["gcode_macro M191"].chambertargettemp|int %} ; ##IF CHAMBER TEMP IS REACHED##
        { action_respond_info("Chamber at or above temp, continuing...") }
            {% if printer.pause_resume.is_paused %}
                RESUME                                                                                                        ; break loop, resume print
            {% endif %}
    {% else %}                                                                                                             ; ##IF CHAMBER TEMP IS NOT YET REACHED##
        { action_respond_info("Chamber not at temp yet, waiting...") }
        UPDATE_DELAYED_GCODE ID=M191-Wait DURATION=5                                                                        ; continue waiting loop
    {% endif %}

[gcode_macro Park]
gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
 G90
 G0 X144 Y309 F30000             # park nozzle at rear
 
[gcode_macro M106]    #aux fan control
rename_existing: G106
gcode:
    {% set P = params.P | default(0) | int %}
    {% set S = params.S | default(255) | int %}
    {% if P == 0 %}
        G106 S{S}
    {% else %}
        {% set fan = "Aux-Fans" if P == 2 %}
        SET_FAN_SPEED FAN={fan} SPEED={S / 255}
    {% endif %}

[gcode_macro M107]
rename_existing: G107
gcode:
    {% set fan = params.P|default(1)|int %}
	{% if fan == 2 %}
		SET_FAN_SPEED FAN=Aux-Fans SPEED=0
	{% else %}
	  SET_FAN_SPEED FAN=Aux-Fans SPEED=0  
	  G107
	{% endif %}


[gcode_macro DATA_SAMPLE]
gcode:
  G90
  M106 S255
  M117 "Waiting for Coil to cool to 40"
  TEMPERATURE_WAIT SENSOR='temperature_sensor Cartographer_coil' MAXIMUM=40
  M117 "Starting Phase 1 of 4"
  M106 S0
  G28
  G0 Z1
  M104 S250
  M140 S110
  G4 P1000
  CARTOGRAPHER_STREAM FILENAME=data1
  M117 "Waiting for Coil to heat to 70"
  TEMPERATURE_WAIT SENSOR='temperature_sensor Cartographer_coil' MINIMUM=70
  CARTOGRAPHER_STREAM FILENAME=data1
  M104 S0
  M140 S0
 M106 S255
  G0 Z80
  M117 "Waiting for Coil to cool to 40"
  TEMPERATURE_WAIT SENSOR='temperature_sensor Cartographer_coil' MAXIMUM=40
  M117 "Starting Phase 2 of 4"
  M106 S0
  G28 Z0
  G0 Z2
  M104 S250
  M140 S110
  G4 P1000
  CARTOGRAPHER_STREAM FILENAME=data2
  M117 "Waiting for Coil to heat to 70"
  TEMPERATURE_WAIT SENSOR='temperature_sensor Cartographer_coil' MINIMUM=70
  CARTOGRAPHER_STREAM FILENAME=data2
  M104 S0
  M140 S0
  M106 S255
  G0 Z80
  M117 "Waiting for Coil to cool to 40"
  TEMPERATURE_WAIT SENSOR='temperature_sensor Cartographer_coil' MAXIMUM=40
  M117 "Starting Phase 3 of 4"
  M106 S0
  G28 Z0
  G0 Z3
  M104 S250
  M140 S110
  G4 P1000
  CARTOGRAPHER_STREAM FILENAME=data3
  M117 "Waiting for Coil to heat to 70"
  TEMPERATURE_WAIT SENSOR='temperature_sensor Cartographer_coil' MINIMUM=70
  CARTOGRAPHER_STREAM FILENAME=data3
  M104 S0
  M140 S0
  M106 S255
  G0 Z80
  M117 "Waiting for Coil to cool to 40"
  TEMPERATURE_WAIT SENSOR='temperature_sensor Cartographer_coil' MAXIMUM=40
  M117 "Starting Phase 4 of 4"
  M106 S0
  G28 Z0
  G0 Z5
  M104 S250
  M140 S110
  G4 P1000
  CARTOGRAPHER_STREAM FILENAME=data4
  M117 "Waiting for Coil to heat to 70"
  TEMPERATURE_WAIT SENSOR='temperature_sensor Cartographer_coil' MINIMUM=70
  CARTOGRAPHER_STREAM FILENAME=data4
  M104 S0
  M140 S0
  M117 "Testing complete, please move files using: mv ~/klipper/data1 ~/klipper/data2 ~/klipper/data3 ~/klipper/data4 ~/cartographer-klipper/"
  M117 "Follow the remaining instructions here: https://docs.cartographer3d.com/cartographer-probe/advanced-features/temperature-differential-calibration-beta"



[gcode_macro test_dildo]
  gcode:
      G28
    G1 Z5 F1200
    M400 ; wait until motor movement finishes
    G4 P1000; wait a second so the printer doesn't shake
    CARTOGRAPHER_STREAM FILENAME=tapdata
    G1 Z-0.5 F200
    M400 ; wait until motor movement finishes
    G4 P1000; wait a second so the printer doesn't shake
    CARTOGRAPHER_STREAM FILENAME=tapdata

[gcode_macro SPEED_TEST_ZARB]
gcode:
  {% set SPEED = params.SPEED|default(100)|float %}
  {% set PADDING = params.PADDING|default(20)|float %}
  {% set MULT = params.MULT|default(60)|float %}
  
  {% set FEEDRATE_MAX = SPEED * MULT %}
  {% set FEEDRATE_MIN = FEEDRATE_MAX / 2 %}

  {% set X_MAX = printer.configfile.settings.stepper_x.position_max - PADDING %}
  {% set Y_MAX = printer.configfile.settings.stepper_y.position_max - PADDING %}
  {% set Z_POS = printer.configfile.settings.stepper_z.position_max / 2 %}

  SET_DISPLAY_TEXT MSG="Speed test {SPEED}mm/s"
  RESPOND TYPE=echo MSG="Testing speed up to {SPEED}mm/s"
  SET_VELOCITY_LIMIT VELOCITY={SPEED}

  {% if "z" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}
  G1 X{PADDING} Y{PADDING} Z{Z_POS} F10000

  {% for percentage in [0.5,0.6,0.7,0.8,0.9,1] %}
    {% set FEEDRATE = FEEDRATE_MAX * percentage %}
    RESPOND TYPE=echo MSG="Speed: {SPEED}mm/s F{FEEDRATE}"
    
    G1 X{PADDING} Y{PADDING} F{FEEDRATE}
    G1 X{X_MAX} Y{Y_MAX} F{FEEDRATE}
    G1 X{PADDING} Y{PADDING} F{FEEDRATE}
    G1 X{X_MAX} Y{Y_MAX} F{FEEDRATE}
    
    G1 X{PADDING} Y{Y_MAX} F{FEEDRATE}
    
    G1 X{X_MAX} Y{PADDING} F{FEEDRATE}
    G1 X{PADDING} Y{Y_MAX} F{FEEDRATE}
    G1 X{X_MAX} Y{PADDING} F{FEEDRATE}
    G1 X{PADDING} Y{Y_MAX} F{FEEDRATE}
  {% endfor %}

  G1 X{PADDING} Y{PADDING} Z{Z_POS} F10000
  RESPOND TYPE=echo MSG="Speed test completed"
  SET_VELOCITY_LIMIT VELOCITY={printer.toolhead.max_velocity}